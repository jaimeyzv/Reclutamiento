//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Metrica.Rrhh.Colaboradores.WSRequerimiento {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultDTO", Namespace="http://schemas.datacontract.org/2004/07/Metrica.Rrhh.Colaboradores.Service.Extens" +
        "ion")]
    [System.SerializableAttribute()]
    public partial class FaultDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaultDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaultIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaultDescription {
            get {
                return this.FaultDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FaultDescriptionField, value) != true)) {
                    this.FaultDescriptionField = value;
                    this.RaisePropertyChanged("FaultDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaultId {
            get {
                return this.FaultIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FaultIdField, value) != true)) {
                    this.FaultIdField = value;
                    this.RaisePropertyChanged("FaultId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://MetricaAndina/Colaboradores/IRequerimientoService", ConfigurationName="WSRequerimiento.IRequerimientoService")]
    public interface IRequerimientoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/Ob" +
            "tener", ReplyAction="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/Ob" +
            "tenerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Metrica.Rrhh.Colaboradores.WSRequerimiento.FaultDTO), Action="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/Ob" +
            "tenerFaultDTOFault", Name="FaultDTO", Namespace="http://schemas.datacontract.org/2004/07/Metrica.Rrhh.Colaboradores.Service.Extens" +
            "ion")]
        Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO Obtener(Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/Ob" +
            "tener", ReplyAction="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/Ob" +
            "tenerResponse")]
        System.Threading.Tasks.Task<Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO> ObtenerAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/Li" +
            "star", ReplyAction="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/Li" +
            "starResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Metrica.Rrhh.Colaboradores.WSRequerimiento.FaultDTO), Action="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/Li" +
            "starFaultDTOFault", Name="FaultDTO", Namespace="http://schemas.datacontract.org/2004/07/Metrica.Rrhh.Colaboradores.Service.Extens" +
            "ion")]
        System.Collections.Generic.List<Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO> Listar(Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/Li" +
            "star", ReplyAction="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/Li" +
            "starResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO>> ListarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/In" +
            "sertar", ReplyAction="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/In" +
            "sertarResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Metrica.Rrhh.Colaboradores.WSRequerimiento.FaultDTO), Action="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/In" +
            "sertarFaultDTOFault", Name="FaultDTO", Namespace="http://schemas.datacontract.org/2004/07/Metrica.Rrhh.Colaboradores.Service.Extens" +
            "ion")]
        int Insertar(Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/In" +
            "sertar", ReplyAction="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/In" +
            "sertarResponse")]
        System.Threading.Tasks.Task<int> InsertarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/Ac" +
            "tualizar", ReplyAction="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/Ac" +
            "tualizarResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Metrica.Rrhh.Colaboradores.WSRequerimiento.FaultDTO), Action="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/Ac" +
            "tualizarFaultDTOFault", Name="FaultDTO", Namespace="http://schemas.datacontract.org/2004/07/Metrica.Rrhh.Colaboradores.Service.Extens" +
            "ion")]
        int Actualizar(Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/Ac" +
            "tualizar", ReplyAction="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/Ac" +
            "tualizarResponse")]
        System.Threading.Tasks.Task<int> ActualizarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/El" +
            "iminar", ReplyAction="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/El" +
            "iminarResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Metrica.Rrhh.Colaboradores.WSRequerimiento.FaultDTO), Action="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/El" +
            "iminarFaultDTOFault", Name="FaultDTO", Namespace="http://schemas.datacontract.org/2004/07/Metrica.Rrhh.Colaboradores.Service.Extens" +
            "ion")]
        int Eliminar(Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/El" +
            "iminar", ReplyAction="http://MetricaAndina/Colaboradores/IRequerimientoService/IRequerimientoService/El" +
            "iminarResponse")]
        System.Threading.Tasks.Task<int> EliminarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO entity);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRequerimientoServiceChannel : Metrica.Rrhh.Colaboradores.WSRequerimiento.IRequerimientoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RequerimientoServiceClient : System.ServiceModel.ClientBase<Metrica.Rrhh.Colaboradores.WSRequerimiento.IRequerimientoService>, Metrica.Rrhh.Colaboradores.WSRequerimiento.IRequerimientoService {
        
        public RequerimientoServiceClient() {
        }
        
        public RequerimientoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RequerimientoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RequerimientoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RequerimientoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO Obtener(Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO entity) {
            return base.Channel.Obtener(entity);
        }
        
        public System.Threading.Tasks.Task<Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO> ObtenerAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO entity) {
            return base.Channel.ObtenerAsync(entity);
        }
        
        public System.Collections.Generic.List<Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO> Listar(Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO entity) {
            return base.Channel.Listar(entity);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO>> ListarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO entity) {
            return base.Channel.ListarAsync(entity);
        }
        
        public int Insertar(Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO entity) {
            return base.Channel.Insertar(entity);
        }
        
        public System.Threading.Tasks.Task<int> InsertarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO entity) {
            return base.Channel.InsertarAsync(entity);
        }
        
        public int Actualizar(Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO entity) {
            return base.Channel.Actualizar(entity);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO entity) {
            return base.Channel.ActualizarAsync(entity);
        }
        
        public int Eliminar(Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO entity) {
            return base.Channel.Eliminar(entity);
        }
        
        public System.Threading.Tasks.Task<int> EliminarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.RequerimientoDTO entity) {
            return base.Channel.EliminarAsync(entity);
        }
    }
}
