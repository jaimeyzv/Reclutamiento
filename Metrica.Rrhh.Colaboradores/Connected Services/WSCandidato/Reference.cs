//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Metrica.Rrhh.Colaboradores.WSCandidato {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://MetricaAndina/Colaboradores/ICandidatoService", ConfigurationName="WSCandidato.ICandidatoService")]
    public interface ICandidatoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/Listar", ReplyAction="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/ListarResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Metrica.Rrhh.Colaboradores.BL.WSNotificacion.FaultDTO), Action="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/ListarFaul" +
            "tDTOFault", Name="FaultDTO", Namespace="http://schemas.datacontract.org/2004/07/Metrica.Rrhh.Colaboradores.Service.Extens" +
            "ion")]
        System.Collections.Generic.List<Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO> Listar(Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/Listar", ReplyAction="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/ListarResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO>> ListarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/Obtener", ReplyAction="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/ObtenerRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Metrica.Rrhh.Colaboradores.BL.WSNotificacion.FaultDTO), Action="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/ObtenerFau" +
            "ltDTOFault", Name="FaultDTO", Namespace="http://schemas.datacontract.org/2004/07/Metrica.Rrhh.Colaboradores.Service.Extens" +
            "ion")]
        Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO Obtener(Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/Obtener", ReplyAction="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/ObtenerRes" +
            "ponse")]
        System.Threading.Tasks.Task<Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO> ObtenerAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/Insertar", ReplyAction="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/InsertarRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Metrica.Rrhh.Colaboradores.BL.WSNotificacion.FaultDTO), Action="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/InsertarFa" +
            "ultDTOFault", Name="FaultDTO", Namespace="http://schemas.datacontract.org/2004/07/Metrica.Rrhh.Colaboradores.Service.Extens" +
            "ion")]
        int Insertar(Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/Insertar", ReplyAction="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/InsertarRe" +
            "sponse")]
        System.Threading.Tasks.Task<int> InsertarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/Actualizar" +
            "", ReplyAction="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/Actualizar" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Metrica.Rrhh.Colaboradores.BL.WSNotificacion.FaultDTO), Action="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/Actualizar" +
            "FaultDTOFault", Name="FaultDTO", Namespace="http://schemas.datacontract.org/2004/07/Metrica.Rrhh.Colaboradores.Service.Extens" +
            "ion")]
        int Actualizar(Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/Actualizar" +
            "", ReplyAction="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/Actualizar" +
            "Response")]
        System.Threading.Tasks.Task<int> ActualizarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/Eliminar", ReplyAction="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/EliminarRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Metrica.Rrhh.Colaboradores.BL.WSNotificacion.FaultDTO), Action="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/EliminarFa" +
            "ultDTOFault", Name="FaultDTO", Namespace="http://schemas.datacontract.org/2004/07/Metrica.Rrhh.Colaboradores.Service.Extens" +
            "ion")]
        int Eliminar(Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/Eliminar", ReplyAction="http://MetricaAndina/Colaboradores/ICandidatoService/ICandidatoService/EliminarRe" +
            "sponse")]
        System.Threading.Tasks.Task<int> EliminarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO entity);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICandidatoServiceChannel : Metrica.Rrhh.Colaboradores.WSCandidato.ICandidatoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CandidatoServiceClient : System.ServiceModel.ClientBase<Metrica.Rrhh.Colaboradores.WSCandidato.ICandidatoService>, Metrica.Rrhh.Colaboradores.WSCandidato.ICandidatoService {
        
        public CandidatoServiceClient() {
        }
        
        public CandidatoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CandidatoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CandidatoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CandidatoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO> Listar(Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO entity) {
            return base.Channel.Listar(entity);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO>> ListarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO entity) {
            return base.Channel.ListarAsync(entity);
        }
        
        public Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO Obtener(Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO entity) {
            return base.Channel.Obtener(entity);
        }
        
        public System.Threading.Tasks.Task<Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO> ObtenerAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO entity) {
            return base.Channel.ObtenerAsync(entity);
        }
        
        public int Insertar(Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO entity) {
            return base.Channel.Insertar(entity);
        }
        
        public System.Threading.Tasks.Task<int> InsertarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO entity) {
            return base.Channel.InsertarAsync(entity);
        }
        
        public int Actualizar(Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO entity) {
            return base.Channel.Actualizar(entity);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO entity) {
            return base.Channel.ActualizarAsync(entity);
        }
        
        public int Eliminar(Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO entity) {
            return base.Channel.Eliminar(entity);
        }
        
        public System.Threading.Tasks.Task<int> EliminarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.CandidatoDTO entity) {
            return base.Channel.EliminarAsync(entity);
        }
    }
}
