//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Metrica.Rrhh.Colaboradores.Test.WSPostulacion {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://MetricaAndina/Colaboradores/IPostulacionService", ConfigurationName="WSPostulacion.IPostulacionService")]
    public interface IPostulacionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Listar" +
            "", ReplyAction="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Listar" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Metrica.Rrhh.Colaboradores.Service.Extension.FaultDTO), Action="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Listar" +
            "FaultDTOFault", Name="FaultDTO", Namespace="http://schemas.datacontract.org/2004/07/Metrica.Rrhh.Colaboradores.Service.Extens" +
            "ion")]
        System.Collections.Generic.List<Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO> Listar(Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Listar" +
            "", ReplyAction="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Listar" +
            "Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO>> ListarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Insert" +
            "ar", ReplyAction="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Insert" +
            "arResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Metrica.Rrhh.Colaboradores.Service.Extension.FaultDTO), Action="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Insert" +
            "arFaultDTOFault", Name="FaultDTO", Namespace="http://schemas.datacontract.org/2004/07/Metrica.Rrhh.Colaboradores.Service.Extens" +
            "ion")]
        int Insertar(Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Insert" +
            "ar", ReplyAction="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Insert" +
            "arResponse")]
        System.Threading.Tasks.Task<int> InsertarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Actual" +
            "izar", ReplyAction="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Actual" +
            "izarResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Metrica.Rrhh.Colaboradores.Service.Extension.FaultDTO), Action="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Actual" +
            "izarFaultDTOFault", Name="FaultDTO", Namespace="http://schemas.datacontract.org/2004/07/Metrica.Rrhh.Colaboradores.Service.Extens" +
            "ion")]
        int Actualizar(Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Actual" +
            "izar", ReplyAction="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Actual" +
            "izarResponse")]
        System.Threading.Tasks.Task<int> ActualizarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Elimin" +
            "ar", ReplyAction="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Elimin" +
            "arResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Metrica.Rrhh.Colaboradores.Service.Extension.FaultDTO), Action="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Elimin" +
            "arFaultDTOFault", Name="FaultDTO", Namespace="http://schemas.datacontract.org/2004/07/Metrica.Rrhh.Colaboradores.Service.Extens" +
            "ion")]
        int Eliminar(Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Elimin" +
            "ar", ReplyAction="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Elimin" +
            "arResponse")]
        System.Threading.Tasks.Task<int> EliminarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Aproba" +
            "r", ReplyAction="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Aproba" +
            "rResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Metrica.Rrhh.Colaboradores.Service.Extension.FaultDTO), Action="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Aproba" +
            "rFaultDTOFault", Name="FaultDTO", Namespace="http://schemas.datacontract.org/2004/07/Metrica.Rrhh.Colaboradores.Service.Extens" +
            "ion")]
        int Aprobar(Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Aproba" +
            "r", ReplyAction="http://MetricaAndina/Colaboradores/IPostulacionService/IPostulacionService/Aproba" +
            "rResponse")]
        System.Threading.Tasks.Task<int> AprobarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO entity);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPostulacionServiceChannel : Metrica.Rrhh.Colaboradores.Test.WSPostulacion.IPostulacionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostulacionServiceClient : System.ServiceModel.ClientBase<Metrica.Rrhh.Colaboradores.Test.WSPostulacion.IPostulacionService>, Metrica.Rrhh.Colaboradores.Test.WSPostulacion.IPostulacionService {
        
        public PostulacionServiceClient() {
        }
        
        public PostulacionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PostulacionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PostulacionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PostulacionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO> Listar(Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO entity) {
            return base.Channel.Listar(entity);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO>> ListarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO entity) {
            return base.Channel.ListarAsync(entity);
        }
        
        public int Insertar(Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO entity) {
            return base.Channel.Insertar(entity);
        }
        
        public System.Threading.Tasks.Task<int> InsertarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO entity) {
            return base.Channel.InsertarAsync(entity);
        }
        
        public int Actualizar(Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO entity) {
            return base.Channel.Actualizar(entity);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO entity) {
            return base.Channel.ActualizarAsync(entity);
        }
        
        public int Eliminar(Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO entity) {
            return base.Channel.Eliminar(entity);
        }
        
        public System.Threading.Tasks.Task<int> EliminarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO entity) {
            return base.Channel.EliminarAsync(entity);
        }
        
        public int Aprobar(Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO entity) {
            return base.Channel.Aprobar(entity);
        }
        
        public System.Threading.Tasks.Task<int> AprobarAsync(Metrica.Rrhh.Colaboradores.Entity.DTO.PostulanteDTO entity) {
            return base.Channel.AprobarAsync(entity);
        }
    }
}
